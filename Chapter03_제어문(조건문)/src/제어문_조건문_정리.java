/*
 * <3p> => 자바 실행환경
 * a.java ======> A.class =====> 한줄씩 읽어서 출력
 * 		   javac	|	   java
 * 		  (컴피일)	|	 (인터프리터)
 * 					바이트코드 (배포) => 모든 운영체제에 호환
 * <22p> => 들여쓰기
 * <23p> => 주석 // (한줄주석) => 번역이 안되는 부분 => 소스 설명
 * ------------------------------------------------------
 * 약속
 * 	=> 1. 클래스 명은 대소문자로 시작한다.
 * 	   2. 변수는 소문자 시작
 * 	   3. 상수는 전체를 대문자 (MAX_VALUE)
 * ------------------------------------------------------
 * 	2장 [프로그램 기초]
 * 	<25p> => 1. 변수
 * 		=> 메모리에 한개의 데이터를 저장하는 공간의 이름
 * 		   -----> 메모리는 주소 < 에 대한 별칭
 * 			2. 형식
 * 				데이터형(메모리크기) 변수명;
 * 				---------------> 저장할 수 있는 공간 : 정수 / 실수 / 논리 / 문자 => 기본형
 * 				정수 저장 공간
 * 				-----------
 * 					byte : -128~127 (네트워크 송수신, 파일 읽기, 파일 쓰기, 사이트검색)
 * 					https://www.google.com/search?q=%EC%9E%90%EB%B0%94 => 자바로 검색했지만 바이트로 변환됨 (인코딩 <-> 디코딩)
 * 					
 * 					int : -21억 4천~21억 4천 (default : 컴퓨터가 인식하는 모든 숫자는 int)
 * 
 * 					long : int와 구분 => L(l)
 * 				실수 저장하는 공간
 * 					double(8byte) : 소수점 15자리 : default
 * 				문자 저장하는 공간
 * 					char(2byte) : 0~65535 => 문자 번호
 * 						-------> 멀티바이트 => Unicode
 * 				true/false 저장 공간
 * 					boolean(1byte) : true/false만 저장 가능
 * ------------------------------------------------------ <30p>
 * 	변수의 명명법 (메소드, 클래스, 인터페이스.. 적용) : 식별자
 * 	----------
 * 	1. 알파벳이나 한글로 시작한다
 * 	   -----> 대소문자 구분
 * 	2. 숫자 사용 가능 (앞 말고 뒤)
 *  3. 특수문자 사용 가능 ($, _)
 *  4. 키워드 사용 금지 (이미 사용중인 단어)
 *  5. 공백 포함 불가능
 *  ------------------------------------------------------ <26p>
 *	<38p> 연산자
 *	1. 단항연산자
 *			1) 증감연산자 (++ , --)
 *			2) 부정연산자 (!)
 *			3) 형변환연산자 (데이터형)
 *	2. 이항연산자
 *			1) 산술연산자 ()
 *			2) 비교연산자 (== , != , < , > , <= , >=)
 *			3) 논리연산자 (&& , ||)
 *			4) 대리연산자 (= , += , -=)
 *  3. 삼항연산자
 *  		1) 
 *  ------------------------------------------------------
 *  	자바에서 제공하는 제어문
 *  	조건문 54
 *  		=단일 조건문 : 독립적으로 사용 => 해당되는 조건이 많을 경우
 *  			형식) if(조건문)
 *  				{
 *  					조건이 true 일 경우에만 처리
 *  				}==> false면 건너뛴다
 *  
 *  		=선택 조건문 : true와 false를 나눠서 처리 56
 *  			형식) if(조건문) => 조건 (비교연산자, 부정연산자, 논리연산자만 사용 가능)
 *  				{
 *  					조건이 true일때 처리
 *  				{
 *  				else
 *  				{
 *  					조건이 false일때 처리
 *  				}
 *  		=다중 조건문 : 조건문 여러개를 나열 => 해당 조건 1개만 수행 58
 *  			형식) if(조건문) 
 *  				{
 *  					조건이 true => 문장 수행 종료
 *  					조건이 false => 밑에 있는 조건을 찾는다
 *  				else if(조건문) 
 *  				}
 *  					조건이 true => 문장 수행 종료
 *  					조건이 false => 밑에 있는 조건을 찾는다
 *  				}
 *  				else if(조건문) 
 *  				{
 *  					조건이 true => 문장 수행 종료
 *  					조건이 false => 밑에 있는 조건을 찾는다
 *  				}
 *  				{
 *  				else
 *  				{
 *  					
 *  				}
 *  
 *  		=선택문
 *  	반복문
 *  		= for : 횟수지정
 *  		= while : 횟수가 없는 	경우 => 파일 종료, 오라클의 저장된 데이터 읽기
 *  		= do~while : 반드시 한번 이상을 수행
 *  	반복제어문
 *        ----------------------------
 *  		= break : 반복 종료 (예외 => switch~case)
 *  		=continue : 특정부분을 제외
 *  	  ---------------------------->반복문에서만 사용이 가능
 */
public class 제어문_조건문_정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
