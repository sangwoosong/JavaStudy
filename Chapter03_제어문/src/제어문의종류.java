//<54P>
/*
 * 		변수 => 저장(데이터)
 * 		연산자 => 결과값, 사용처, 형식
 * 		제어문 => 흐름 (동작), 사용처, 형식
 * 
 * 			1. 제어문의 종류 - 제어문은 무조건 1개의 문장만 수행할 수 있다. ({}안에 있는건 모든 문장)
 * 				----if(조건문)----
 * 					문장1 => 제어
 * 					문장2 => 일반문장
 * 				
 * 					if(조건문)
 * 					{
 * 						문장1
 * 						문장2
 * 					)
 * 				----------------
 * 				1) 조건문
 * 					- 단일 조건문
 * 						형식)------------------------------------------------
 * 							if(조건문) => 조건문 (비교연산자, 논리연산자, 부정연산자)
 * 							{
 * 								조건문이 true일 경우에 수행할 문장
 * 							}
 * 							=> 명령문을 제어한다 (수행할 수도 안할 수도)
 * 							=> 단점은 속도가 느리다 (단일 조건문 여러개 사용시)
 * 							=> 1개가 독립문장이기 때문
 * 							=> 중복이 있는 경우 자주 사용
 * 								ㄴ1~100까지 중에 3,5,7 배수 등
 * 							------------------------------------------------
 * 
 * 					- 선택 조건문 : true와 false를 나눠서 작업
 * 					----if(조건문)----
 * 						{
 * 							조건문이 true 일때
 * 						}
 * 						else
 * 						{
 * 							조건문이 false 일때
 * 						}
 * 					----------------
 * 
 * 					- 다중 조건문 : 한번만 수행할때 주로 사용
 * 						=> 계산기 : = , - , * , /
 * 					----if(조건문)----
 * 						{
 * 							조건문이 true면 수행하는 문장 종료
 * 							false면 ↘
 * 									밑에 있는 조건문으로 이동
 * 						}
 * 						else if(조건문)
 * 						{
 * 									"
 * 						}
 * 						else if(조건문)
 * 						{
 * 									"
 * 						}
 * 						else
 * 						{	
 * 									(생략가능)
 * 							해당 조건이 없는 경우 처리하는 문장
 * 						}
 * 					----------------
 * 							
 * 														=> 첫번째 조건문만 수행되기 때문에 3의 배수만 나옴 
 * 														=> if(단일 조건문)만 사용
 * 						Ex) ---------------------------------------------------
 * 							int score=80				int a=15
 * 							if(score>=90) A				if(a%3==0)
 * 							if(score>=80) B				else if(a%5==0)
 * 							if(score>=70) C				else if(a%7==0)
 * 							if(score>=60) D					
 * 							if(score<60) E
 * 							---------------------------------------------------
 * 							=> 모두 수행되기 때문에 ABCD가 모두 나옴 
 * 							=> else if(다중 조건문)를 사용
 * 
 * 				2) 선택문
 * 				3) 반복문
 * 				4) 반복제어문
 */
// 단일 조건문 : 조건식 (비교연산자,논리연산자,부정연산자)
// 1. 정수 한개를 입력받아서 짝수/홀수 
import java.util.Scanner;
public class 제어문의종류 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//Scanner는 클래스 => 키보드로 입력해서 저장 => 엔터 메모리에 저장
		/*
		 * 기능 (메소드)
		 * 정수 : nextInt()
		 * 문자열 : next()
		 * 실수 : nextDouble()
		 * 논리 : nextBoolean()
		 * 문자는 x => System.ln => 정수
		 * 웹/윈도우 (char(x))
		 */
		// Scanner 클래스 저장 => 클래스를 저장 (new)=저장을 위해
		// 동적바인딩
		Scanner scan=new Scanner(System.in);
		// System.in / System.out => 자바 표준 입출력
		System.out.print("숫자를 입력해주세요 : ");
		int num=scan.nextInt();
		// 가공
		if (num%2==0) 
		{
			System.out.println(num+"는(은) 짝수입니다");
		}
		
		if (num%2!=0) // num%2==1	!(num%2==0)
		{
			System.out.println(num+"는(은) 홀수입니다");
		}
		
//	선택 조건문
//		if (num%2==0)
//				{
//			System.out.println(num+"는(은) 짝수입니다");
//				}
//		else
//		{
//			System.out.println(num+"는(은) 홀수입니다");
//		}

	}

}
