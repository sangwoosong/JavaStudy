/*
	자바 => 클래스 기반
		  ------
		  	1. 구성요소
		  		ㄴ변수 : 기본형 데이터 (int, long, double...)
		  				참조형 데이터 (배열, 클래스)
		  								 -----
		  		ㄴ메소드
		  		ㄴ생성자
		  		-----------------------+ (객체지향)
		  	2. 메소드 : 특정 작업을 수행하는 일련의 명령문 집합
		  			  --------> 한가지 기능 수행이 가능하게 만듦
		  			  			-------------
		  			  				ㄴ 수정, 추가 (다형성)
		  메소드 주요 사용처 : 클래스와 클래스를 연결
		   	"	 사용 이유 : 재사용 / 유지보수(추가, 수정) => 가독성(문장 단락=>구조적인 프로그램) / 중복코드 제거
		    "		 구조 : 
		    			- 구성요소 : 리턴형, 메소드명, 매개변수(인자) 
		    				[접근지정어][옵션] 리턴형 메소드 (매개변수)
		    							   -----	   -------
		    							 한개만 사용      0개 이상
		    							 
		    					-------------------
		    						선언부 / 구현부
		    					리턴형 메소드(매개변수) => [선언부]
		    					{
		    						[구현부] => 구현을 해야 메모리에 저장
		    					}
		    					-------------------> 메소드가 정답은 아님
		    					 ___
		    					|- 리턴형 : 한개의 데이터만 설정
		    					|		  ---------> 기본형, 배열, 클래스
		    					|		  String => 사용자 정의
		    					|	ㄴ메소드 자체에서 처리 (void)
		    					|	ㄴ호출 후에 처리 (리턴형 존재)
		    					|- 매개변수 : 기본형, 참조형 (배열, 클래스)
		    					|		   여러개 사용 가능 (3개 이상 넘어갈 시 참조형 사용)
		    					|		   사용자가 요청에 필요한 데이터
		    					|- 메소드명 : 식별자를 이용
		    					|___
		    					    => 사용자 요청에 대한 처리 (한가지 기능 수행) 
		    					  
		    					  	void method()
		    					  	{
		    					  		return; //  return;(메소드 처리 종료) => 생략
		    					  						ㄴ컴파일러에 의해 자동 추가
		    					  	}
		    					  	int method()
		    					  	{
		    					  		return 10
		    					  			   -- 정수
		    					  	}
		    					  	double method()
		    					  	{
		    					  		return 10.5 (10,'A',10.5F)
		    					  	}
		    					  	String method()
		    					  	{
		    					  		return "Hello";
		    					  	}
		    					  	int[] method()
		    					  	{
		    					  		int[] arr=new int[10];
		    					  		return arr;
		    					  	}
		    					  	
		   		3. 메소드 유형
		   			*** 메소드 안에 선언된 변수는 해당 메소드에서만 사용 가능
		   				void method()
		   				{
		   					int a=10; => 지역변수 (반드시 초기화 후에 사용 가능)
		   				} // a는 메모리 해제(메모리 자체에서 해제 => stack)
		   				 *** 매개변수는 지역변수와 동일 취급
		   				 *** return은 메소드 종료를 알림
		   				 *** 메소드 블록 닫기전에 return을 사용
		   				 		=>  중간에 사용해 종료
		   				 		
		   ----------------------------------------
		   	리턴형 (처리 결과값)	매개변수 (사용자 요청값)
		   ----------------------------------------
		   			O					O
		   			=> String substring(int start)
		   ----------------------------------------
		   			O					X
		   			=> double Math.random()
		   			=> String trim()
		   ----------------------------------------
		   			X					O
		   			=> 출력을 메소드 자체에서 처리
		   			void main(String[] args)
		   			void println(String s)
		   ----------------------------------------
		   			X					X
		   			void println() => 다음줄에 출력 (거의 빈도수가 없음)
		   ----------------------------------------
		    			=> 결과값이 없는 경우는 반드시 void
		    				=> 오라클 연결 (insert, update, delete)
		    				   CRUD...
		    			=> 메소드 (행위,동작) => 동작에 대한 처리 ...
 */
public class 메소드_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
